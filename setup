#!/bin/bash

set -e
set -o pipefail

OTHER_ARS=()

while [[ $# -gt 0 ]]; do
  # shellcheck disable=SC2221,SC2222
  case $1 in
      -h|--help)
      echo "Setup dotfiles into your env"
      echo " "
      echo "$0 [flags] files.."
      echo " "
      echo "flags:"
      echo "  -h, --help      show brief help"
      echo "  -f, --forche    force existing files overwrite"
      exit 0
      ;;
    -f|--force)
      FORCE=YES
      shift
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      OTHER_ARS+=("$1")
      shift
      ;;
  esac
done

backup_root=$HOME
backup_dir=".dotfiles/backups/$(date '+%Y-%m-%d-%H%M%S')"
backup_path="$backup_root/$backup_dir"

basecopy() {
  src=$1
  destdir=$2
  force=$3

  basename=$(basename "${src}")
  basedir="$(dirname "${src}")"
  destpath="$destdir/$basename"

  if [[ $force == 1 && $FORCE != "YES" ]]; then
    if [[ ! -d "$backup_path" ]]; then
      echo "Backup directory: $backup_path"
      (cd $backupds_root && mkdir -p $backup_dir)
    fi
  fi

  if [[ -d "$src" ]]; then
    echo "Dir: $src"

    if [[ ! -d "$destpath" ]]; then
      echo "  Copying '$src' to '$destpath' ..."
      cp -r "$src/" "$destpath/"
    elif [[ $force == 1 || $FORCE == "YES" ]]; then
      echo "  Backup '$destpath' dir"
      mkdir -p "$backup_path/$src" && cp -r "$destpath/" "$backup_path/$basename/"

      echo "  Overwriting dir '$destpath'"
      cp -r "$src/" "$destpath/"
    else
      echo "  Directory '$destpath' already exists"
    fi

  else
    echo "File: $src"

    if [[ ! -f $destpath ]]; then
      echo "  Copying '$src' to '$destpath' ..."
      cp -n -p "$src" "$destpath"
    elif [[ $force == 1 || $FORCE == "YES" ]]; then
      echo "  Backup '$destpath' file"
      mkdir -p "$backup_path/$basedir" && cp -p "$destpath" "$backup_path/$basedir"

      echo "  Overwriting file '$destpath'"
      cp -p "$src" "$destpath"
    else
      echo "  File '$destpath' already exists"
    fi
  fi

  echo ""
}

basecopy .aliases ~ 0
basecopy functions ~ 0
basecopy zsh/.zshenv ~ 0
basecopy zsh/.zshrc ~ 0
basecopy configs/tmux/.tmux.conf ~ 0
basecopy configs/tmux/.tmux/lang.sh ~/.tmux 0
basecopy configs/tmux/.tmux/plugins/tmux-weather/scripts/helpers.sh ~/.tmux/plugins/tmux-weather/scripts 0
