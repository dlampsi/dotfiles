#!/bin/bash

set -e
set -o pipefail

for arg in "$@"; do
  case $arg in
    -h|--help)
      echo "Setup dotfiles an configurations into local environment"
      echo " "
      echo "$0 [flags] action"
      echo " "
      echo "flags:"
      echo "  -h, --help      show brief help"
      echo "  -f, --forche    force existing files overwrite"
      echo " "
      echo "actions:"
      echo "  disk-image     Creating a disk image"
      exit 0
    ;;
    -f|--force)
      force=1
      shift
      ;;
    *)
      action=$1
      shift
      ;;
  esac
done

backup_root=$HOME
backup_dir=".dotfiles/backups/$(date '+%Y-%m-%d-%H%M%S')"
backup_path="$backup_root/$backup_dir"

if [[ -n $force ]]; then
  if [[ ! -d "$backup_path" ]]; then
    (cd "$backup_root" && mkdir -p "$backup_dir")
    echo "Created backup dir: $backup_path"
  fi
fi


setup_file() {
  src=$1
  dest=$2

  if [[ -n $force || "$3" != "" ]]; then
    overwrite=1
  fi

  basedir="$(dirname "${src}")"
  basename="$(basename "${src}")"

  if [[ ! -f "$dest" ]]; then
    echo "($src) Copying to '$dest'"
    cp -n -p "$src" "$dest"
    return
  fi

  echo "($src) File already exists in '$dest'"

  if [[ -n $overwrite ]]; then
    echo "($src) Backup to '$backup_path/$basedir/$basename'"
    mkdir -p "$backup_path/$basedir"
    cp -p "$dest" "$backup_path/$basedir/$basename"
  
    cp -p "$src" "$dest"
    echo "($src) File '$dest' overwrited"
  fi
}

setup_dir() {
  src=$1
  dest=$2

  if [[ -n $force || "$3" != "" ]]; then
    overwrite=1
  fi
  
  basedir="$(dirname "${src}")"
  basename="$(basename "${src}")"

  if [[ ! -d "$dest" ]]; then
    echo "($src) Copying to '$dest'"
    cp -r "$src/" "$dest/"
    return
  fi

  echo "($src) Directory already exists in '$dest'"

  if [[ -n $overwrite ]]; then
    echo "($src) Backup to '$backup_path/$basename'"
    mkdir -p "$backup_path/$src"
    cp -r "$dest/" "$backup_path/$basename/"

    cp -r "$src/" "$dest/"
    echo "($src) Directory '$dest' overwrited"
  fi
}

setup_aliases() {
  setup_file ".aliases" "$HOME/.aliases"
}

setup_functions() {
  setup_dir ".functions" "$HOME/.functions"
}

setup_zsh() {
  setup_file "zsh/.zshenv" "$HOME/.zshenv"
  setup_file "zsh/.zshrc" "$HOME/.zshrc"
}

setup_tmux() {
  setup_file "configs/tmux/.tmux.conf" "$HOME/.tmux.conf"
  setup_file "configs/tmux/.tmux/lang.sh" "$HOME/.tmux/lang.sh"
  setup_file "configs/tmux/.tmux/plugins/tmux-weather/scripts/helpers.sh" "$HOME/.tmux/plugins/tmux-weather/scripts/helpers.sh"
}

setup_vim() {
  setup_file "configs/vim/.vimrc" "$HOME/.vimrc"
}

case $action in
  "aliases")
    setup_aliases
    ;;
  "zsh")
    setup_zsh
    ;;
  "functions")
    setup_functions
    ;;
  "tmux")
    setup_tmux
    ;;
  "vim")
    setup_vim
    ;;
  "all"|*)
    echo "Running all actions"
    setup_aliases
    setup_functions
    setup_zsh
    setup_tmux
    setup_vim
    ;;
esac
